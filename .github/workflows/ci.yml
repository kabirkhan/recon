name: CI

on:
  push:
    branches:
      - main
      - hatchling/uv
    tags:
      - 'v*'
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: uv pip install -r ./requirements-dev.txt

      - name: Lint
        run: |
          ruff recon tests docs/src
          black recon tests docs/src --check

      - name: Pyright
        run: pyright

  test:
    name: test py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - python: '3.8'
            os: windows-latest
          - python: '3.9'
            os: macos-latest
          - python: '3.10'
            os: ubuntu-latest
          - python: '3.11'
            os: ubuntu-latest
          - python: '3.11'
            os: windows-latest
          - python: '3.11'
            os: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}

      - name: Install dependencies
        run: uv pip install -r ./requirements-dev.txt

      - name: test
        run: |
          pytest tests -n 2

  deploy:
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install twine
        run: pipx install twine

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'poetry'

      - name: Build
        run: |
          poetry build

      - name: Publish
        run: |
          poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
