name: CI

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request: {}

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Load cached Poetry installation
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: lint
        run: make lint

  test:
    name: test py${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ['3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3

      - name: Set up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Load cached Poetry installation
        if: matrix.os == 'ubuntu-latest'
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install --no-interaction --no-root

      - name: Install library
        run: poetry install --no-interaction

      - name: test
        run: |
          make test

  deploy:
    needs: test
    if: "success() && startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: set up python
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python }}

      - name: Load cached Poetry installation
        uses: actions/cache@v2
        with:
          path: ~/.local
          key: poetry-0

      - name: Install Poetry
        uses: snok/install-poetry@v1

      - name: Build
        run: |
          poetry build

      - name: Publish
        run: |
          poetry publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
